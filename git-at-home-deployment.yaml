---
apiVersion: v1
kind: Namespace
metadata:
  name: git-at-home

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-at-home
  namespace: git-at-home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: git-at-home
  template:
    metadata:
      labels:
        app: git-at-home
    spec:
      containers:
        - name: git-server
          image: ghcr.io/neptunehub/git-at-home:latest
          # The command now generates host keys into a persistent volume on first start.
          command: ["/bin/sh", "-c"]
          args:
            - ssh-keygen -A && exec /usr/sbin/sshd -D -e
          ports:
            - containerPort: 22
          volumeMounts:
            # Mount for the user's public key from the secret.
            # This relies on the /home/git/.ssh directory from the original image.
            - name: ssh-keys
              mountPath: /home/git/.ssh/authorized_keys
              subPath: authorized_keys
              readOnly: true
            # Mount for the git repositories.
            - name: git-repos
              mountPath: /git/repos
            # NEW: Mount for the server's host keys to persist them across restarts.
            - name: ssh-host-keys
              mountPath: /etc/ssh
      # REMOVED: The initContainer is no longer needed. The original directory
      # structure from the image is now preserved.
      volumes:
        # Volume for the user's public key, with correct permissions.
        - name: ssh-keys
          secret:
            secretName: git-ssh-keys
            defaultMode: 0600
        # Volume for the git repositories. For production, change this to a PVC.
        - name: git-repos
          emptyDir: {}
        # NEW: Volume to persist the server's host keys for the life of the pod.
        - name: ssh-host-keys
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: git-at-home
  namespace: git-at-home
spec:
  type: NodePort
  selector:
    app: git-at-home
  ports:
    - protocol: TCP
      port: 22
      targetPort: 22
      nodePort: 32222
